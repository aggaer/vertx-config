/*
 * This file is generated by jOOQ.
 */
package vert.model.generated.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import vert.model.generated.Indexes;
import vert.model.generated.Keys;
import vert.model.generated.Sms;
import vert.model.generated.tables.records.SmsTemplateRecord;


/**
 * 短信模板
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmsTemplate extends TableImpl<SmsTemplateRecord> {

    private static final long serialVersionUID = -604311779;

    /**
     * The reference instance of <code>sms.sms_template</code>
     */
    public static final SmsTemplate SMS_TEMPLATE = new SmsTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SmsTemplateRecord> getRecordType() {
        return SmsTemplateRecord.class;
    }

    /**
     * The column <code>sms.sms_template.ID</code>. 自增主键
     */
    public final TableField<SmsTemplateRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "自增主键");

    /**
     * The column <code>sms.sms_template.MCH_ID</code>. 商户号
     */
    public final TableField<SmsTemplateRecord, String> MCH_ID = createField("MCH_ID", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商户号");

    /**
     * The column <code>sms.sms_template.MCH_NAME</code>. 商户名称
     */
    public final TableField<SmsTemplateRecord, String> MCH_NAME = createField("MCH_NAME", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商户名称");

    /**
     * The column <code>sms.sms_template.CREATED_TIME</code>. 创建时间
     */
    public final TableField<SmsTemplateRecord, LocalDateTime> CREATED_TIME = createField("CREATED_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>sms.sms_template.UPDATE_TIME</code>. 修改时间
     */
    public final TableField<SmsTemplateRecord, LocalDateTime> UPDATE_TIME = createField("UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "修改时间");

    /**
     * The column <code>sms.sms_template.TEMP_NAME</code>. 模板名称
     */
    public final TableField<SmsTemplateRecord, String> TEMP_NAME = createField("TEMP_NAME", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "模板名称");

    /**
     * The column <code>sms.sms_template.TEMP_CODE</code>. 模板编码
     */
    public final TableField<SmsTemplateRecord, String> TEMP_CODE = createField("TEMP_CODE", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "模板编码");

    /**
     * The column <code>sms.sms_template.TEMP_TYPE</code>. 模板类型 0 行业短信，1 营销短信
     */
    public final TableField<SmsTemplateRecord, Integer> TEMP_TYPE = createField("TEMP_TYPE", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "模板类型 0 行业短信，1 营销短信");

    /**
     * The column <code>sms.sms_template.TEMP_SIGNATURE</code>. 模板签名
     */
    public final TableField<SmsTemplateRecord, String> TEMP_SIGNATURE = createField("TEMP_SIGNATURE", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "模板签名");

    /**
     * The column <code>sms.sms_template.TEMP_SIGNATURE_TYPE</code>. 签名类型 1 前置签名 2 后置签名
     */
    public final TableField<SmsTemplateRecord, Integer> TEMP_SIGNATURE_TYPE = createField("TEMP_SIGNATURE_TYPE", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "签名类型 1 前置签名 2 后置签名");

    /**
     * The column <code>sms.sms_template.TEMP_CONTENT</code>. 模板内容
     */
    public final TableField<SmsTemplateRecord, String> TEMP_CONTENT = createField("TEMP_CONTENT", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "模板内容");

    /**
     * The column <code>sms.sms_template.REMARK</code>. 备注
     */
    public final TableField<SmsTemplateRecord, String> REMARK = createField("REMARK", org.jooq.impl.SQLDataType.VARCHAR(150).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "备注");

    /**
     * The column <code>sms.sms_template.TEMP_STATUS</code>. 模板状态 0.审核通过 1 待审核 2 审核驳回 3 逻辑删除  4禁用 
     */
    public final TableField<SmsTemplateRecord, Integer> TEMP_STATUS = createField("TEMP_STATUS", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "模板状态 0.审核通过 1 待审核 2 审核驳回 3 逻辑删除  4禁用 ");

    /**
     * The column <code>sms.sms_template.ENABLED</code>. 0 启用 1禁用
     */
    public final TableField<SmsTemplateRecord, Integer> ENABLED = createField("ENABLED", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "0 启用 1禁用");

    /**
     * The column <code>sms.sms_template.CHANNEL_ID</code>. 通道ID
     */
    public final TableField<SmsTemplateRecord, String> CHANNEL_ID = createField("CHANNEL_ID", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "通道ID");

    /**
     * The column <code>sms.sms_template.CHANNEL_NAME</code>. 通道名称
     */
    public final TableField<SmsTemplateRecord, String> CHANNEL_NAME = createField("CHANNEL_NAME", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "通道名称");

    /**
     * The column <code>sms.sms_template.ACCEPT_TIME</code>. 审核时间
     */
    public final TableField<SmsTemplateRecord, LocalDateTime> ACCEPT_TIME = createField("ACCEPT_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "审核时间");

    /**
     * The column <code>sms.sms_template.ACCEPT_PERSON_CODE</code>. 审核人编号
     */
    public final TableField<SmsTemplateRecord, String> ACCEPT_PERSON_CODE = createField("ACCEPT_PERSON_CODE", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "审核人编号");

    /**
     * The column <code>sms.sms_template.ACCEPT_PERSON_NAME</code>. 审核人名字
     */
    public final TableField<SmsTemplateRecord, String> ACCEPT_PERSON_NAME = createField("ACCEPT_PERSON_NAME", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "审核人名字");

    /**
     * The column <code>sms.sms_template.REVIEW_FAIL_RESON</code>. 驳回原因
     */
    public final TableField<SmsTemplateRecord, String> REVIEW_FAIL_RESON = createField("REVIEW_FAIL_RESON", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "驳回原因");

    /**
     * The column <code>sms.sms_template.TEMP_CONTENT_TYPE</code>. 模板内容类型 1固定内容 2变量内容 0默认
     */
    public final TableField<SmsTemplateRecord, Integer> TEMP_CONTENT_TYPE = createField("TEMP_CONTENT_TYPE", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "模板内容类型 1固定内容 2变量内容 0默认");

    /**
     * Create a <code>sms.sms_template</code> table reference
     */
    public SmsTemplate() {
        this(DSL.name("sms_template"), null);
    }

    /**
     * Create an aliased <code>sms.sms_template</code> table reference
     */
    public SmsTemplate(String alias) {
        this(DSL.name(alias), SMS_TEMPLATE);
    }

    /**
     * Create an aliased <code>sms.sms_template</code> table reference
     */
    public SmsTemplate(Name alias) {
        this(alias, SMS_TEMPLATE);
    }

    private SmsTemplate(Name alias, Table<SmsTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private SmsTemplate(Name alias, Table<SmsTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("短信模板"));
    }

    public <O extends Record> SmsTemplate(Table<O> child, ForeignKey<O, SmsTemplateRecord> key) {
        super(child, key, SMS_TEMPLATE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sms.SMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SMS_TEMPLATE_PRIMARY, Indexes.SMS_TEMPLATE_UNIQ_TEMP_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SmsTemplateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SMS_TEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SmsTemplateRecord> getPrimaryKey() {
        return Keys.KEY_SMS_TEMPLATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SmsTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<SmsTemplateRecord>>asList(Keys.KEY_SMS_TEMPLATE_PRIMARY, Keys.KEY_SMS_TEMPLATE_UNIQ_TEMP_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmsTemplate as(String alias) {
        return new SmsTemplate(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmsTemplate as(Name alias) {
        return new SmsTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SmsTemplate rename(String name) {
        return new SmsTemplate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SmsTemplate rename(Name name) {
        return new SmsTemplate(name, null);
    }
}

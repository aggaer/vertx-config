/*
 * This file is generated by jOOQ.
 */
package vert.model.generated.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * 短信模板
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ISmsTemplate extends VertxPojo, Serializable {

    /**
     * Setter for <code>sms.sms_template.ID</code>. 自增主键
     */
    public ISmsTemplate setId(Integer value);

    /**
     * Getter for <code>sms.sms_template.ID</code>. 自增主键
     */
    public Integer getId();

    /**
     * Setter for <code>sms.sms_template.MCH_ID</code>. 商户号
     */
    public ISmsTemplate setMchId(String value);

    /**
     * Getter for <code>sms.sms_template.MCH_ID</code>. 商户号
     */
    public String getMchId();

    /**
     * Setter for <code>sms.sms_template.MCH_NAME</code>. 商户名称
     */
    public ISmsTemplate setMchName(String value);

    /**
     * Getter for <code>sms.sms_template.MCH_NAME</code>. 商户名称
     */
    public String getMchName();

    /**
     * Setter for <code>sms.sms_template.CREATED_TIME</code>. 创建时间
     */
    public ISmsTemplate setCreatedTime(LocalDateTime value);

    /**
     * Getter for <code>sms.sms_template.CREATED_TIME</code>. 创建时间
     */
    public LocalDateTime getCreatedTime();

    /**
     * Setter for <code>sms.sms_template.UPDATE_TIME</code>. 修改时间
     */
    public ISmsTemplate setUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>sms.sms_template.UPDATE_TIME</code>. 修改时间
     */
    public LocalDateTime getUpdateTime();

    /**
     * Setter for <code>sms.sms_template.TEMP_NAME</code>. 模板名称
     */
    public ISmsTemplate setTempName(String value);

    /**
     * Getter for <code>sms.sms_template.TEMP_NAME</code>. 模板名称
     */
    public String getTempName();

    /**
     * Setter for <code>sms.sms_template.TEMP_CODE</code>. 模板编码
     */
    public ISmsTemplate setTempCode(String value);

    /**
     * Getter for <code>sms.sms_template.TEMP_CODE</code>. 模板编码
     */
    public String getTempCode();

    /**
     * Setter for <code>sms.sms_template.TEMP_TYPE</code>. 模板类型 0 行业短信，1 营销短信
     */
    public ISmsTemplate setTempType(Integer value);

    /**
     * Getter for <code>sms.sms_template.TEMP_TYPE</code>. 模板类型 0 行业短信，1 营销短信
     */
    public Integer getTempType();

    /**
     * Setter for <code>sms.sms_template.TEMP_SIGNATURE</code>. 模板签名
     */
    public ISmsTemplate setTempSignature(String value);

    /**
     * Getter for <code>sms.sms_template.TEMP_SIGNATURE</code>. 模板签名
     */
    public String getTempSignature();

    /**
     * Setter for <code>sms.sms_template.TEMP_SIGNATURE_TYPE</code>. 签名类型 1 前置签名 2 后置签名
     */
    public ISmsTemplate setTempSignatureType(Integer value);

    /**
     * Getter for <code>sms.sms_template.TEMP_SIGNATURE_TYPE</code>. 签名类型 1 前置签名 2 后置签名
     */
    public Integer getTempSignatureType();

    /**
     * Setter for <code>sms.sms_template.TEMP_CONTENT</code>. 模板内容
     */
    public ISmsTemplate setTempContent(String value);

    /**
     * Getter for <code>sms.sms_template.TEMP_CONTENT</code>. 模板内容
     */
    public String getTempContent();

    /**
     * Setter for <code>sms.sms_template.REMARK</code>. 备注
     */
    public ISmsTemplate setRemark(String value);

    /**
     * Getter for <code>sms.sms_template.REMARK</code>. 备注
     */
    public String getRemark();

    /**
     * Setter for <code>sms.sms_template.TEMP_STATUS</code>. 模板状态 0.审核通过 1 待审核 2 审核驳回 3 逻辑删除  4禁用 
     */
    public ISmsTemplate setTempStatus(Integer value);

    /**
     * Getter for <code>sms.sms_template.TEMP_STATUS</code>. 模板状态 0.审核通过 1 待审核 2 审核驳回 3 逻辑删除  4禁用 
     */
    public Integer getTempStatus();

    /**
     * Setter for <code>sms.sms_template.ENABLED</code>. 0 启用 1禁用
     */
    public ISmsTemplate setEnabled(Integer value);

    /**
     * Getter for <code>sms.sms_template.ENABLED</code>. 0 启用 1禁用
     */
    public Integer getEnabled();

    /**
     * Setter for <code>sms.sms_template.CHANNEL_ID</code>. 通道ID
     */
    public ISmsTemplate setChannelId(String value);

    /**
     * Getter for <code>sms.sms_template.CHANNEL_ID</code>. 通道ID
     */
    public String getChannelId();

    /**
     * Setter for <code>sms.sms_template.CHANNEL_NAME</code>. 通道名称
     */
    public ISmsTemplate setChannelName(String value);

    /**
     * Getter for <code>sms.sms_template.CHANNEL_NAME</code>. 通道名称
     */
    public String getChannelName();

    /**
     * Setter for <code>sms.sms_template.ACCEPT_TIME</code>. 审核时间
     */
    public ISmsTemplate setAcceptTime(LocalDateTime value);

    /**
     * Getter for <code>sms.sms_template.ACCEPT_TIME</code>. 审核时间
     */
    public LocalDateTime getAcceptTime();

    /**
     * Setter for <code>sms.sms_template.ACCEPT_PERSON_CODE</code>. 审核人编号
     */
    public ISmsTemplate setAcceptPersonCode(String value);

    /**
     * Getter for <code>sms.sms_template.ACCEPT_PERSON_CODE</code>. 审核人编号
     */
    public String getAcceptPersonCode();

    /**
     * Setter for <code>sms.sms_template.ACCEPT_PERSON_NAME</code>. 审核人名字
     */
    public ISmsTemplate setAcceptPersonName(String value);

    /**
     * Getter for <code>sms.sms_template.ACCEPT_PERSON_NAME</code>. 审核人名字
     */
    public String getAcceptPersonName();

    /**
     * Setter for <code>sms.sms_template.REVIEW_FAIL_RESON</code>. 驳回原因
     */
    public ISmsTemplate setReviewFailReson(String value);

    /**
     * Getter for <code>sms.sms_template.REVIEW_FAIL_RESON</code>. 驳回原因
     */
    public String getReviewFailReson();

    /**
     * Setter for <code>sms.sms_template.TEMP_CONTENT_TYPE</code>. 模板内容类型 1固定内容 2变量内容 0默认
     */
    public ISmsTemplate setTempContentType(Integer value);

    /**
     * Getter for <code>sms.sms_template.TEMP_CONTENT_TYPE</code>. 模板内容类型 1固定内容 2变量内容 0默认
     */
    public Integer getTempContentType();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ISmsTemplate
     */
    public void from(vert.model.generated.tables.interfaces.ISmsTemplate from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ISmsTemplate
     */
    public <E extends vert.model.generated.tables.interfaces.ISmsTemplate> E into(E into);

    @Override
    public default ISmsTemplate fromJson(io.vertx.core.json.JsonObject json) {
        setId(json.getInteger("ID"));
        setMchId(json.getString("MCH_ID"));
        setMchName(json.getString("MCH_NAME"));
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_TIME!
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATE_TIME!
        setTempName(json.getString("TEMP_NAME"));
        setTempCode(json.getString("TEMP_CODE"));
        setTempType(json.getInteger("TEMP_TYPE"));
        setTempSignature(json.getString("TEMP_SIGNATURE"));
        setTempSignatureType(json.getInteger("TEMP_SIGNATURE_TYPE"));
        setTempContent(json.getString("TEMP_CONTENT"));
        setRemark(json.getString("REMARK"));
        setTempStatus(json.getInteger("TEMP_STATUS"));
        setEnabled(json.getInteger("ENABLED"));
        setChannelId(json.getString("CHANNEL_ID"));
        setChannelName(json.getString("CHANNEL_NAME"));
        // Omitting unrecognized type java.time.LocalDateTime for column ACCEPT_TIME!
        setAcceptPersonCode(json.getString("ACCEPT_PERSON_CODE"));
        setAcceptPersonName(json.getString("ACCEPT_PERSON_NAME"));
        setReviewFailReson(json.getString("REVIEW_FAIL_RESON"));
        setTempContentType(json.getInteger("TEMP_CONTENT_TYPE"));
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("ID",getId());
        json.put("MCH_ID",getMchId());
        json.put("MCH_NAME",getMchName());
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_TIME!
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATE_TIME!
        json.put("TEMP_NAME",getTempName());
        json.put("TEMP_CODE",getTempCode());
        json.put("TEMP_TYPE",getTempType());
        json.put("TEMP_SIGNATURE",getTempSignature());
        json.put("TEMP_SIGNATURE_TYPE",getTempSignatureType());
        json.put("TEMP_CONTENT",getTempContent());
        json.put("REMARK",getRemark());
        json.put("TEMP_STATUS",getTempStatus());
        json.put("ENABLED",getEnabled());
        json.put("CHANNEL_ID",getChannelId());
        json.put("CHANNEL_NAME",getChannelName());
        // Omitting unrecognized type java.time.LocalDateTime for column ACCEPT_TIME!
        json.put("ACCEPT_PERSON_CODE",getAcceptPersonCode());
        json.put("ACCEPT_PERSON_NAME",getAcceptPersonName());
        json.put("REVIEW_FAIL_RESON",getReviewFailReson());
        json.put("TEMP_CONTENT_TYPE",getTempContentType());
        return json;
    }

}

/*
 * This file is generated by jOOQ.
 */
package vert.model.generated.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ITransSendDetail extends VertxPojo, Serializable {

    /**
     * Setter for <code>sms.trans_send_detail.TRANS_ID</code>. 交易号
     */
    public ITransSendDetail setTransId(String value);

    /**
     * Getter for <code>sms.trans_send_detail.TRANS_ID</code>. 交易号
     */
    public String getTransId();

    /**
     * Setter for <code>sms.trans_send_detail.MCH_ORDER_NO</code>. 商户订单号
     */
    public ITransSendDetail setMchOrderNo(String value);

    /**
     * Getter for <code>sms.trans_send_detail.MCH_ORDER_NO</code>. 商户订单号
     */
    public String getMchOrderNo();

    /**
     * Setter for <code>sms.trans_send_detail.USER_ID</code>.
     */
    public ITransSendDetail setUserId(String value);

    /**
     * Getter for <code>sms.trans_send_detail.USER_ID</code>.
     */
    public String getUserId();

    /**
     * Setter for <code>sms.trans_send_detail.APP_ID</code>. 商户appId
     */
    public ITransSendDetail setAppId(String value);

    /**
     * Getter for <code>sms.trans_send_detail.APP_ID</code>. 商户appId
     */
    public String getAppId();

    /**
     * Setter for <code>sms.trans_send_detail.MCH_ID</code>. 商户号
     */
    public ITransSendDetail setMchId(String value);

    /**
     * Getter for <code>sms.trans_send_detail.MCH_ID</code>. 商户号
     */
    public String getMchId();

    /**
     * Setter for <code>sms.trans_send_detail.CHANNEL_ID</code>. 调用渠道Id
     */
    public ITransSendDetail setChannelId(String value);

    /**
     * Getter for <code>sms.trans_send_detail.CHANNEL_ID</code>. 调用渠道Id
     */
    public String getChannelId();

    /**
     * Setter for <code>sms.trans_send_detail.REQUEST_ID</code>. 请求号,请求短信平台
     */
    public ITransSendDetail setRequestId(String value);

    /**
     * Getter for <code>sms.trans_send_detail.REQUEST_ID</code>. 请求号,请求短信平台
     */
    public String getRequestId();

    /**
     * Setter for <code>sms.trans_send_detail.PHONE</code>. 手机号
     */
    public ITransSendDetail setPhone(String value);

    /**
     * Getter for <code>sms.trans_send_detail.PHONE</code>. 手机号
     */
    public String getPhone();

    /**
     * Setter for <code>sms.trans_send_detail.CONTENT</code>. 短信内容
     */
    public ITransSendDetail setContent(String value);

    /**
     * Getter for <code>sms.trans_send_detail.CONTENT</code>. 短信内容
     */
    public String getContent();

    /**
     * Setter for <code>sms.trans_send_detail.CHANNEL_TRANS_ID</code>. 渠道返回
     */
    public ITransSendDetail setChannelTransId(String value);

    /**
     * Getter for <code>sms.trans_send_detail.CHANNEL_TRANS_ID</code>. 渠道返回
     */
    public String getChannelTransId();

    /**
     * Setter for <code>sms.trans_send_detail.TRANS_DATE</code>. 短信发送日期
     */
    public ITransSendDetail setTransDate(String value);

    /**
     * Getter for <code>sms.trans_send_detail.TRANS_DATE</code>. 短信发送日期
     */
    public String getTransDate();

    /**
     * Setter for <code>sms.trans_send_detail.TRANS_TIME</code>. 短信发送时间（具体到秒）
     */
    public ITransSendDetail setTransTime(String value);

    /**
     * Getter for <code>sms.trans_send_detail.TRANS_TIME</code>. 短信发送时间（具体到秒）
     */
    public String getTransTime();

    /**
     * Setter for <code>sms.trans_send_detail.MODIFY_TIME</code>. 渠道回执时间
     */
    public ITransSendDetail setModifyTime(String value);

    /**
     * Getter for <code>sms.trans_send_detail.MODIFY_TIME</code>. 渠道回执时间
     */
    public String getModifyTime();

    /**
     * Setter for <code>sms.trans_send_detail.ACCEPT_STATUS</code>. 受理状态
     */
    public ITransSendDetail setAcceptStatus(String value);

    /**
     * Getter for <code>sms.trans_send_detail.ACCEPT_STATUS</code>. 受理状态
     */
    public String getAcceptStatus();

    /**
     * Setter for <code>sms.trans_send_detail.ACCEPT_FAILREASON</code>. 受理失败原因
     */
    public ITransSendDetail setAcceptFailreason(String value);

    /**
     * Getter for <code>sms.trans_send_detail.ACCEPT_FAILREASON</code>. 受理失败原因
     */
    public String getAcceptFailreason();

    /**
     * Setter for <code>sms.trans_send_detail.TRANS_STATUS</code>. 渠道回执状态
     */
    public ITransSendDetail setTransStatus(String value);

    /**
     * Getter for <code>sms.trans_send_detail.TRANS_STATUS</code>. 渠道回执状态
     */
    public String getTransStatus();

    /**
     * Setter for <code>sms.trans_send_detail.FAILREASON</code>.
     */
    public ITransSendDetail setFailreason(String value);

    /**
     * Getter for <code>sms.trans_send_detail.FAILREASON</code>.
     */
    public String getFailreason();

    /**
     * Setter for <code>sms.trans_send_detail.BUSINESS_TYPE</code>. 业务类型（行业或者营销）
     */
    public ITransSendDetail setBusinessType(String value);

    /**
     * Getter for <code>sms.trans_send_detail.BUSINESS_TYPE</code>. 业务类型（行业或者营销）
     */
    public String getBusinessType();

    /**
     * Setter for <code>sms.trans_send_detail.SERVICE_TYPE</code>. 业务类型（上行-商户到运营商00|下行-运营商到商户01）
     */
    public ITransSendDetail setServiceType(String value);

    /**
     * Getter for <code>sms.trans_send_detail.SERVICE_TYPE</code>. 业务类型（上行-商户到运营商00|下行-运营商到商户01）
     */
    public String getServiceType();

    /**
     * Setter for <code>sms.trans_send_detail.NOTIFY_URL</code>. 通知URL
     */
    public ITransSendDetail setNotifyUrl(String value);

    /**
     * Getter for <code>sms.trans_send_detail.NOTIFY_URL</code>. 通知URL
     */
    public String getNotifyUrl();

    /**
     * Setter for <code>sms.trans_send_detail.SMS_PHONE</code>. 隐藏4位数的手机号
     */
    public ITransSendDetail setSmsPhone(String value);

    /**
     * Getter for <code>sms.trans_send_detail.SMS_PHONE</code>. 隐藏4位数的手机号
     */
    public String getSmsPhone();

    /**
     * Setter for <code>sms.trans_send_detail.FEE</code>. 商户费率
     */
    public ITransSendDetail setFee(String value);

    /**
     * Getter for <code>sms.trans_send_detail.FEE</code>. 商户费率
     */
    public String getFee();

    /**
     * Setter for <code>sms.trans_send_detail.PROFIT</code>. 利润
     */
    public ITransSendDetail setProfit(String value);

    /**
     * Getter for <code>sms.trans_send_detail.PROFIT</code>. 利润
     */
    public String getProfit();

    /**
     * Setter for <code>sms.trans_send_detail.CHANNEL_NOTIFY_TIME</code>. 渠道通知时间
     */
    public ITransSendDetail setChannelNotifyTime(String value);

    /**
     * Getter for <code>sms.trans_send_detail.CHANNEL_NOTIFY_TIME</code>. 渠道通知时间
     */
    public String getChannelNotifyTime();

    /**
     * Setter for <code>sms.trans_send_detail.SYN_FLAG</code>. 是否开启 0：未同步 1：已同步
     */
    public ITransSendDetail setSynFlag(Boolean value);

    /**
     * Getter for <code>sms.trans_send_detail.SYN_FLAG</code>. 是否开启 0：未同步 1：已同步
     */
    public Boolean getSynFlag();

    /**
     * Setter for <code>sms.trans_send_detail.mch_manager</code>. 商务经理
     */
    public ITransSendDetail setMchManager(String value);

    /**
     * Getter for <code>sms.trans_send_detail.mch_manager</code>. 商务经理
     */
    public String getMchManager();

    /**
     * Setter for <code>sms.trans_send_detail.mch_manager_dept</code>. 商务经理所在部门
     */
    public ITransSendDetail setMchManagerDept(String value);

    /**
     * Getter for <code>sms.trans_send_detail.mch_manager_dept</code>. 商务经理所在部门
     */
    public String getMchManagerDept();

    /**
     * Setter for <code>sms.trans_send_detail.split_count</code>.
     */
    public ITransSendDetail setSplitCount(Boolean value);

    /**
     * Getter for <code>sms.trans_send_detail.split_count</code>.
     */
    public Boolean getSplitCount();

    /**
     * Setter for <code>sms.trans_send_detail.new_report_status</code>. 报送数据中心的状态：0未报送，1已报送，默认为0
     */
    public ITransSendDetail setNewReportStatus(Boolean value);

    /**
     * Getter for <code>sms.trans_send_detail.new_report_status</code>. 报送数据中心的状态：0未报送，1已报送，默认为0
     */
    public Boolean getNewReportStatus();

    /**
     * Setter for <code>sms.trans_send_detail.report_status</code>.
     */
    public ITransSendDetail setReportStatus(Boolean value);

    /**
     * Getter for <code>sms.trans_send_detail.report_status</code>.
     */
    public Boolean getReportStatus();

    /**
     * Setter for <code>sms.trans_send_detail.is_charge</code>. 运营商是否收费状态:0不收费，1收费，默认为0
     */
    public ITransSendDetail setIsCharge(Integer value);

    /**
     * Getter for <code>sms.trans_send_detail.is_charge</code>. 运营商是否收费状态:0不收费，1收费，默认为0
     */
    public Integer getIsCharge();

    /**
     * Setter for <code>sms.trans_send_detail.notify_time</code>.
     */
    public ITransSendDetail setNotifyTime(String value);

    /**
     * Getter for <code>sms.trans_send_detail.notify_time</code>.
     */
    public String getNotifyTime();

    /**
     * Setter for <code>sms.trans_send_detail.TEMP_CODE</code>.
     */
    public ITransSendDetail setTempCode(String value);

    /**
     * Getter for <code>sms.trans_send_detail.TEMP_CODE</code>.
     */
    public String getTempCode();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ITransSendDetail
     */
    public void from(vert.model.generated.tables.interfaces.ITransSendDetail from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ITransSendDetail
     */
    public <E extends vert.model.generated.tables.interfaces.ITransSendDetail> E into(E into);

    @Override
    public default ITransSendDetail fromJson(io.vertx.core.json.JsonObject json) {
        setTransId(json.getString("TRANS_ID"));
        setMchOrderNo(json.getString("MCH_ORDER_NO"));
        setUserId(json.getString("USER_ID"));
        setAppId(json.getString("APP_ID"));
        setMchId(json.getString("MCH_ID"));
        setChannelId(json.getString("CHANNEL_ID"));
        setRequestId(json.getString("REQUEST_ID"));
        setPhone(json.getString("PHONE"));
        setContent(json.getString("CONTENT"));
        setChannelTransId(json.getString("CHANNEL_TRANS_ID"));
        setTransDate(json.getString("TRANS_DATE"));
        setTransTime(json.getString("TRANS_TIME"));
        setModifyTime(json.getString("MODIFY_TIME"));
        setAcceptStatus(json.getString("ACCEPT_STATUS"));
        setAcceptFailreason(json.getString("ACCEPT_FAILREASON"));
        setTransStatus(json.getString("TRANS_STATUS"));
        setFailreason(json.getString("FAILREASON"));
        setBusinessType(json.getString("BUSINESS_TYPE"));
        setServiceType(json.getString("SERVICE_TYPE"));
        setNotifyUrl(json.getString("NOTIFY_URL"));
        setSmsPhone(json.getString("SMS_PHONE"));
        setFee(json.getString("FEE"));
        setProfit(json.getString("PROFIT"));
        setChannelNotifyTime(json.getString("CHANNEL_NOTIFY_TIME"));
        setSynFlag(json.getBoolean("SYN_FLAG"));
        setMchManager(json.getString("mch_manager"));
        setMchManagerDept(json.getString("mch_manager_dept"));
        setSplitCount(json.getBoolean("split_count"));
        setNewReportStatus(json.getBoolean("new_report_status"));
        setReportStatus(json.getBoolean("report_status"));
        setIsCharge(json.getInteger("is_charge"));
        setNotifyTime(json.getString("notify_time"));
        setTempCode(json.getString("TEMP_CODE"));
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("TRANS_ID",getTransId());
        json.put("MCH_ORDER_NO",getMchOrderNo());
        json.put("USER_ID",getUserId());
        json.put("APP_ID",getAppId());
        json.put("MCH_ID",getMchId());
        json.put("CHANNEL_ID",getChannelId());
        json.put("REQUEST_ID",getRequestId());
        json.put("PHONE",getPhone());
        json.put("CONTENT",getContent());
        json.put("CHANNEL_TRANS_ID",getChannelTransId());
        json.put("TRANS_DATE",getTransDate());
        json.put("TRANS_TIME",getTransTime());
        json.put("MODIFY_TIME",getModifyTime());
        json.put("ACCEPT_STATUS",getAcceptStatus());
        json.put("ACCEPT_FAILREASON",getAcceptFailreason());
        json.put("TRANS_STATUS",getTransStatus());
        json.put("FAILREASON",getFailreason());
        json.put("BUSINESS_TYPE",getBusinessType());
        json.put("SERVICE_TYPE",getServiceType());
        json.put("NOTIFY_URL",getNotifyUrl());
        json.put("SMS_PHONE",getSmsPhone());
        json.put("FEE",getFee());
        json.put("PROFIT",getProfit());
        json.put("CHANNEL_NOTIFY_TIME",getChannelNotifyTime());
        json.put("SYN_FLAG",getSynFlag());
        json.put("mch_manager",getMchManager());
        json.put("mch_manager_dept",getMchManagerDept());
        json.put("split_count",getSplitCount());
        json.put("new_report_status",getNewReportStatus());
        json.put("report_status",getReportStatus());
        json.put("is_charge",getIsCharge());
        json.put("notify_time",getNotifyTime());
        json.put("TEMP_CODE",getTempCode());
        return json;
    }

}
